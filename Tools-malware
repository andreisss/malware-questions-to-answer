File type information
These tools gather primary information about a file. The data gathered includes the filename, file size, file type, and file type-specific properties.
The result of these tools enables the analyst to plan how to analyze the file:

PEiD: A tool used to identify the file type, the packer, and compiler. It is built to run in Windows. It is not maintained, but still very useful.

TrID: A command-line tool similar to PEiD. This tool has Windows and Linux versions. It can read a community-driven signature database of various file types.

CFF Explorer: This tool is primarily used to read and make edits in a PE format file. It runs under Windows and has a lot of features, such as listing processes
and dumping processes to a file. It can also be used to rebuild a process dump.

PE Explorer: Another tool used to read and edit the structure of PE files. It can also unpack a number of executable compressed programs, such as UPX, Upack, and NSPack.
PE Explorer only runs in Windows.

Detect-it-Easy (DiE): Downloaded from https:/ / github. com/ horsicq/ Detect-

It- Easy, DiE is an open source tool that uses a community-driven set of algorithmic signatures to identify files.
The tool has builds for Windows and Linux.

ExifTool: This tool was primarily designed to read and edit the metadata of image files with an EXIF file format.
It was further developed to extend features for other file formats, including PE files.
ExifTool is available for Windows and Linux and can be downloaded from https:/ / sno. phy. queensu. ca/ ~phil/ exiftool/ .

Hash identifying
Information gathering also includes identifying a file by its hash.
Not only does the hash help validate a transferred file; it is also commonly used as a unique ID for a file analysis profile:

Quickhash: This is an open source tool available for Windows, Linux, and macOS that generates the MD5, SHA1, SHA256, and SHA512 of any file.
It can be downloaded from https:/ / quickhash- gui. org/ .

HashTab: This tool runs in Windows and can be integrated as a tab in the properties information of a file.
It calculates the MD5, SHA1, and a couple of hash algorithms.

7-zip: This tool is actually a file archiver, but it has an extension tool that can be enabled to calculate the hash of a file in MD5, SHA1, SHA256, and so forth.

Strings
Text-string gathering tools are mainly used to quickly identify possible functions or messages used by the program.
It is not always true that every text string is used by the program.
Program flow still depends on conditions set in the program. However, the string locations in the file can be used as markers that the analyst can trace back:

SysInternals Suite's strings: This is a command-line tool for Windows that shows the list of text strings in any type of file.
BinText: This is a GUI-based Windows tool that can display the ASCII and
Unicode text strings for any given file.

Monitoring tools
Without manually digging deeper into the program's algorithm, simply running the program can give plenty of information about its behavior.
Monitoring tools usually work by placing sensors in common or specific system library functions, then logging the parameters used.
Using monitoring tools is a fast way to produce an initial behavior analysis of a program:
SysInternals Suite's Procmon or Process Monitor: Running only on Windows, this is a real-time monitoring tool that monitors processes, thread, filesystem, and registry events.
It can be downloaded from https:/ / docs. microsoft. com/ enus/ sysinternals/ downloads/ procmon and is a part of the SysInternals Suite package.

API Monitor: This powerful tool helps reverse engineering by monitoring API calls as the program runs. The analyst has to set which API the tool needs to hook.
Once an API is hooked, all user-mode processes using the API will be logged. API Monitor can be downloaded from http:/ / www. rohitab. com/ apimonitor.

CaptureBAT: In addition to what Process Monitor can do, this command-line tool is also capable of monitoring network traffic.

Network tools
The following is a list of tools that are used to monitor the network:
tcpdump: This is a Linux-based tool used to capture network traffic. It can be installed from the default repositories.
Wireshark: This tool is capable of monitoring network traffic.
Incoming and outgoing network traffic, including packet information and data, is logged in real time.
Originally named Ethereal, Wireshark is available for Windows, Linux, and macOS
mitmproxy: Also known as Man-In-The-Middle Proxy.
As its name states, it is set up as a proxy, and thus able to control and monitor network traffic before data is either sent externally or received by internal programs.
inetsim: Essentially, this tool fakes network and internet connectivity, thereby  trapping any network traffic sent externally by a program. 
This is very useful for analyzing malware, preventing it from sending data externally, while having knowledge of where it connects to and what data it tries to send.

Default command-line tools
There are a couple of useful tools that are already built into the operating system we are working on. These come in handy when third party tools are not available:
strings: This is a Linux command used to list the strings found in a given file.
md5sum: This is a Linux command used to calculate the MD5 hash of a given file.
file: This is a command line in Linux used to identify files. It uses the libmagic library.
